// 此文件为客户端服务器协议文件

const (
	SingleMode = 1     // 单人模式
	MultiPlayer = 2   // 多人模式
)

type ResponseRegOrLogIn struct {
	Name     string        `json:"name"`
	Type     int           `json:"type"`
	NextProcess int        `json:"nextProcess"`
	Colors    []int         `json:"colors"`
	Keys      []int          `json:"keys"`
	Ret bool                `json:"ret"`
}


type RoomInfo struct {
     ResourceRand int      `json:"resourceRand"`          // 瓶子随机值
     PositionX []float      `json:"xs"`                   // 同一个关卡其他玩家的位置
     PositionY []float      `json:"ys"`
     Names     []string     `json:"names"`
}


type Partner struct {
	Name string         `json:"name"`
	X     float32         `json:"x"`
	Y     float32         `json:"y"`
}

// 我需要x，y坐标的选点。

请求注册： 1    RequestRegister(name string)
         2    ResponseRegister (info ResponseRegOrLogIn)    玩家信息、是否注册成功
请求登录  3     RequestLoginIn（name string）
         4    ResponseLoginIn(info ResponseRegOrLogIn)      玩家信息、是否登录成功

进入游戏  5    RequestStartGame(name string, mode int32)     名字 单人模式/多人
         6    ResponseJoinRoom(roomInfo RoomInfo)  瓶子随机值，其他玩家坐标

         18   BroadcastJoinRoom(name string) 仅在多人模式下,   进入关卡的玩家


请求移动  11   RequestMove(partner Partner)      玩家坐标，玩家名字      单人模式下客户端不必给服务器发此请求
        12    BroadcastMove(partner Partner)   移动的玩家坐标，名字

拿到颜色  13    RequestGetColor(name string, color int)
         14    BroadcastGetColor(name string)    拿到颜色的玩家名字  仅在多人模式下，服务器才会向客户端发此广播 你需要 color 吗？

进入下一关 15   RequestJoinRoom(name string, roomId int, lastRoomId int)  玩家姓名 房间id 退出房间id
         6    ResponseJoinRoom(roomInfo RoomInfo)  瓶子随机值，其他玩家坐标
         16   BroadcastLeaveRoom(name string)      仅在多人模式下，  退出关卡的玩家
         17   BroadcastJoinRoom(name string)      仅在多人模式下,   进入关卡的玩家




 网络断线 16   BroadcastLeaveRoom(name string)   仅在多人模式下，服务器才会向



